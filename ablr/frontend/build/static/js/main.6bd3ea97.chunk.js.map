{"version":3,"sources":["pages/Home.jsx","components/Field.jsx","components/FieldTitle.jsx","components/ContactCard.jsx","components/PersonalCard.jsx","components/IncomeCard.jsx","components/OthersCard.jsx","pages/Callback.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","getInfoLogin","a","window","location","href","className","style","boxShadow","onClick","Field","fieldName","value","FieldTitle","title","ContactCard","data","mobileno","nbr","email","regadd","block","street","building","floor","unit","postal","hdbtype","desc","PersonalCard","uinfin","name","sex","dob","birthcountry","residentialstatus","nationality","race","boolConvert","boolStr","convert","Intl","NumberFormat","minimumFractionDigits","format","NOALine","values","heading","currency","map","item","i","NOAHistory","history","yearofassessment","employment","trade","interest","rent","amount","taxclearance","CPFAccount","CPFContribution","month","date","employer","IncomeCard","noahistory","noas","ownerprivate","cpfbalances","oa","sa","ma","cpfcontributions","OthersCard","employmentsector","marital","edulevel","aliasname","marriedname","passtype","Details","infoToDisplay","Callback","navigate","useNavigate","useState","setInfoToDisplay","setData","loading","setLoading","error","setError","useSearchParams","searchParams","useEffect","mounted","getPerson","fetch","method","body","JSON","stringify","get","response","status","json","api_data","console","log","index","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bd3ea97.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Home() {\n\n  const getInfoLogin = async () => {\n    window.location.href = \"api/myinfo/login/\"\n  }\n  return (\n    <>\n      <div\n        className='flex flex-col sm:w-full lg:w-3/4 2xl:w-2/3 h-full bg-gray-200 overflow-hidden'\n        style={{\n          boxShadow:\n            \"0px 2px 3px 1px rgba(0,0,0,0.3),0px 2px 10px 4px rgba(0,0,0,0.3)\"\n        }}>\n        <div className=\"flex flex-row w-full h-full\">\n          <div className=\"flex flex-col justify-center items-center bg-white w-full\">\n            <div className='border rounded cursor-pointer text-center bg-red-700 hover:bg-red-400 text-white w-36 m-2 p-1' onClick={() => getInfoLogin()}>Retrieve MyInfo</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport const Field = ({ fieldName, value }) => {\n    return (\n        <div className='flex-row w-full mb-3 mt-3'>\n            <div className='text-gray-400'>\n                {fieldName}\n            </div>\n            <div className='font-semibold'>\n                {value}\n            </div>\n        </div>\n    )\n}\n","export const FieldTitle = ({ title }) => {\n    return (\n        <div className=\"border-b border-blue-500 w-3/4\">\n            <div className=\"text-xl mt-3 mb-3 font-semibold\">{title}</div>\n        </div>\n    )\n}\n","import { Field } from \"./Field\"\nimport { FieldTitle } from \"./FieldTitle\"\n\nexport const ContactCard = ({ data }) => {\n    return (\n        <div className=\"flex flex-col ml-9\">\n            <FieldTitle title=\"Contact Info\" />\n            <Field fieldName=\"Mobile Number\" value={data.mobileno.nbr.value} />\n            <Field fieldName=\"Email\" value={data.email.value} />\n            <FieldTitle title=\"Registered Address\" />\n            <Field fieldName=\"Block Number\" value={data.regadd.block.value} />\n            <Field fieldName=\"Street Name\" value={data.regadd.street.value} />\n            <Field fieldName=\"Building Name\" value={data.regadd.building.value} />\n            <Field fieldName=\"Floor & Unit No\" value={`#${data.regadd.floor.value}-${data.regadd.unit.value}`} />\n            <Field fieldName=\"Postal Code\" value={data.regadd.postal.value} />\n            <Field fieldName=\"Type of Housing\" value={data.hdbtype.desc} />\n        </div>\n    )\n}\n","import { FieldTitle } from \"./FieldTitle\"\nimport { Field } from \"./Field\"\n\nexport const PersonalCard = ({data}) => {\n    return (\n        <div className=\"flex flex-col ml-9\">\n            <FieldTitle title=\"Personal Info\" />\n            <Field fieldName=\"NRIC/FIN\" value={data.uinfin.value} />\n            <Field fieldName=\"Principal Name\" value={data.name.value} />\n            <Field fieldName=\"Sex\" value={data.sex.desc} />\n            <Field fieldName=\"Date Of Birth\" value={data.dob.value} />\n            <Field fieldName=\"Country Of Birth\" value={data.birthcountry.desc} />\n            <Field fieldName=\"Residential Status\" value={data.residentialstatus.desc} />\n            <Field fieldName=\"Nationality\" value={data.nationality.desc} />\n            <Field fieldName=\"Race\" value={data.race.desc} />\n        </div>\n    )\n}\n","import { FieldTitle } from \"./FieldTitle\"\nimport { Field } from \"./Field\"\n\nconst boolConvert = (boolStr) => {\n  switch (boolStr) {\n    case \"false\":\n      return \"No\"\n\n    case \"true\":\n      return \"Yes\"\n\n    default:\n      return \"N/A\"\n  }\n}\n\nconst convert = (value) => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 2\n  })\n  return formatter.format(value)\n}\n\nconst NOALine = ({ title, values, heading = false, currency = false }) => (\n  <div className={`flex flex-row ${heading ? \"font-bold\" : \"\"}`}>\n    <div className=\"w-64\">{title}</div>\n    <div className=\"flex w-full\">\n      {values.map((item, i) => (\n        <div key={i} className=\"flex-1 text-right\">{currency ? convert(item) : item}</div>\n      ))}\n    </div>\n  </div>\n)\n\nconst NOAHistory = ({ history }) => (\n  <div className=\"flex flex-col w-3/4\">\n    <NOALine title=\"Year Of Assessment\" values={history.map((i) => i.yearofassessment.value)} heading />\n    <NOALine title=\"Employment\" values={history.map((i) => i.employment.value)} currency />\n    <NOALine title=\"Trade\" values={history.map((i) => i.trade.value)} currency />\n    <NOALine title=\"Interest\" values={history.map((i) => i.interest.value)} currency />\n    <NOALine title=\"Rent\" values={history.map((i) => i.rent.value)} currency />\n    <NOALine title=\"Total Income\" values={history.map((i) => i.amount.value)} heading currency />\n    <NOALine title=\"Tax Clearance\" values={history.map((i) => i.taxclearance.value)} heading />\n  </div>\n)\n\nconst CPFAccount = ({ title, value }) => (\n  <div className=\"flex flex-col w-3/4\">\n    <div className={`flex flex-row`}>\n      <div className=\"w-64\">{title}</div>\n      <div className=\"flex-1 text-right\">{convert(value)}</div>\n    </div>\n  </div>\n)\n\nconst CPFContribution = ({ history }) => (\n  <div className=\"flex flex-col w-3/4 h-full\">\n    <div className=\"flex flex-row\">\n      <div className=\"w-1/4 font-semibold\">\n        For Month\n      </div>\n      <div className=\"w-1/4 font-semibold\">\n        Paid On\n      </div>\n      <div className=\"w-1/4 font-semibold\">\n        Amount (S$)\n      </div>\n      <div className=\"w-1/4 font-semibold\">\n        Employer\n      </div>\n    </div>\n    {history.map((item, i) => (\n      <div className=\"flex flex-row\" key={i}>\n        <div className=\"w-1/4\">\n          {item.month.value}\n        </div>\n        <div className=\"w-1/4\">\n          {item.date.value}\n        </div>\n        <div className=\"w-1/4\">\n          {convert(item.amount.value)}\n        </div>\n        <div className=\"w-1/4\">\n          {item.employer.value}\n        </div>\n      </div>\n    ))}\n  </div>\n)\n\n\nexport const IncomeCard = ({ data }) => {\n  return (\n    <div className=\"flex flex-col ml-9 overflow-auto h-5/6\">\n      <FieldTitle title=\"Notice of Assessment (History)\" />\n      <NOAHistory history={data.noahistory.noas} />\n      <FieldTitle title=\"Other Income Information\" />\n      <Field fieldName=\"Ownership of Private Residential Property\" value={boolConvert(data.ownerprivate.value)} />\n      <FieldTitle title=\"CPF Account Balance\" />\n      <CPFAccount title=\"Ordinary Account (OA) (S$)\" value={data.cpfbalances.oa.value} />\n      <CPFAccount title=\"Special Account (SA) (S$)\" value={data.cpfbalances.sa.value} />\n      <CPFAccount title=\"Medisave Account (MA) (S$)\" value={data.cpfbalances.ma.value} />\n      <FieldTitle title=\"CPF Contribution History\" />\n      <CPFContribution history={data.cpfcontributions.history} />\n    </div>\n  )\n}\n","import { Field } from \"./Field\"\n\nexport const OthersCard = ({ data }) => {\n    return (\n        <div className=\"flex flex-col ml-9\">\n            <Field fieldName=\"Employment Sector\" value={data.employmentsector.value} />\n            <Field fieldName=\"Marital Status\" value={data.marital.desc} />\n            <Field fieldName=\"Education Level\" value={data.edulevel.desc} />\n            <Field fieldName=\"Alias Name\" value={data.aliasname.value} />\n            <Field fieldName=\"Married Name\" value={data.marriedname.value} />\n            <Field fieldName=\"Married Name\" value={data.marriedname.value} />\n            <Field fieldName=\"Pass Type\" value={data.passtype.value} />\n        </div>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { ContactCard } from \"../components/ContactCard\"\nimport { PersonalCard } from \"../components/PersonalCard\"\nimport { IncomeCard } from \"../components/IncomeCard\"\nimport { OthersCard } from \"../components/OthersCard\"\nimport { useSearchParams, useNavigate } from \"react-router-dom\"\n\n\n\n// to get data on load from backend\nconst Details = ({ infoToDisplay, data }) => {\n  switch (infoToDisplay) {\n    case 0:\n      return <ContactCard data={data} />\n    case 1:\n      return <PersonalCard data={data} />\n    case 2:\n      return <IncomeCard data={data} />\n    case 3:\n      return <OthersCard data={data} />\n    default:\n      break;\n  }\n}\n\nexport default function Callback() {\n  const navigate = useNavigate()\n  const [infoToDisplay, setInfoToDisplay] = useState(0)\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [searchParams] = useSearchParams()\n  useEffect(() => {\n    let mounted = true\n    const getPerson = async () => {\n      const response = await fetch(\n        \"http://localhost:3001/api/myinfo/retrieve/\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            \"code\": searchParams.get(\"code\")\n          })\n        }\n      )\n      if (mounted && response.status >= 200 && response.status <= 299) {\n        const api_data = await response.json()\n        setData(api_data)\n        setLoading(false)\n        console.log(data)\n      } else if (response.status === 400) {\n        setError()\n      }\n    }\n    getPerson()\n    return () => {\n      mounted = false\n    }\n  }, [searchParams, data])\n\n  if (error) {\n    return <>Something when wrong, please try again <a href=\"/\">here</a>.</>\n  }\n\n  return loading ? (<div className=\"mt-32\">loading...</div>) : (\n    <>\n      <div\n        className='flex flex-col sm:w-full lg:w-3/4 2xl:w-2/3 h-full bg-gray-200 overflow-hidden'\n        style={{\n          boxShadow:\n            \"0px 2px 3px 1px rgba(0,0,0,0.3),0px 2px 10px 4px rgba(0,0,0,0.3)\"\n        }}>\n        <div className=\"flex-row bg-white\">\n          <div className=\"mt-11 ml-11 mb-5 text-xl\">MyInfo</div>\n        </div>\n        <div className=\"flex flex-row w-full h-full\">\n          <div className=\"flex-col border w-36 h-full\">\n            {[\"Contact Info\", \"Personal Info\", \"Income Info\", \"Others\"].map((item, index) => (\n              <div className=\"flex flex-row bg-gray-200 h-10 text-sm justify-center items-center border-b w-full cursor-pointer hover:bg-white\" key={index} onClick={() => setInfoToDisplay(index)}>\n                {item}\n              </div>\n            )\n            )}\n          </div>\n          <div className=\"flex flex-col bg-white w-full\">\n            <Details infoToDisplay={infoToDisplay} data={data} />\n            <div className=\"border rounded cursor-pointer text-center bg-red-700 hover:bg-red-400 text-white w-36 m-2 p-1\" onClick={() => navigate(\"/\")}>Continue</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\"\nimport Callback from \"./pages/Callback\"\n\n\nfunction App() {\n  return (\n    <div className='flex flex-col h-screen min-w-full w-full justify-center'>\n      <div className='flex h-full min-w-full justify-center bg-gray-100'>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/callback\" element={<Callback />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}